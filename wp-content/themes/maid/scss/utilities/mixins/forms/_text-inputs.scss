@mixin form-element {
	$height: ($input-font-size + ($form-spacing * 1.5) - rem-calc(1));

	display: block;
	box-sizing: border-box;
	width: 100%;
	height: $height;
	padding: $form-spacing / 2;
	border: $input-border;
	margin: 0 0 $form-spacing;

	font-family: $input-font-family;
	font-size: $input-font-size;
	color: $input-color;
	background-color: $input-background;
	box-shadow: $input-shadow;
	border-radius: $input-radius;

	@if has-value($input-transition) {
		transition: $input-transition;
	}

	// Focus state
	&:focus {
		border: $input-border-focus;
		background-color: $input-background-focus;
		outline: none;
		box-shadow: $input-shadow-focus;

		@if has-value($input-transition) {
			transition: $input-transition;
		}
	}
}

@mixin foundation-form-text {
	// Text inputs
	#{text-inputs()},
	textarea {
		@include form-element;
		-webkit-appearance: none;
		-moz-appearance: none;
	}

	// Text areas
	textarea {
		max-width: 100%;

		&[rows] {
			height: auto;
		}
	}

	input,
	textarea {
		// Placeholder text
		&::placeholder {
			color: $input-placeholder-color;
		}

		// Disabled/readonly state
		&:disabled,
		&[readonly] {
			background-color: $input-background-disabled;
			cursor: $input-cursor-disabled;
		}
	}

	// Reset styles on button-like inputs
	[type='submit'],
	[type='button'] {
		border-radius: $button-radius;
		-webkit-appearance: none;
		-moz-appearance: none;
	}

	// Reset Normalize setting content-box to search elements
	// scss-lint:disable QualifyingElement
	input[type='search'] {
		box-sizing: border-box;
	}

	// Number input styles
	[type='number'] {
		@if not $input-number-spinners {
			-moz-appearance: textfield;

			[type='number']::-webkit-inner-spin-button,
			[type='number']::-webkit-outer-spin-button {
				-webkit-appearance: none;
				margin: 0;
			}
		}
	}
}